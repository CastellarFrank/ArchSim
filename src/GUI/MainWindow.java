/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DataStructures.Loader;
import DataStructures.ModuleRepository;
import GUI.Design.DesignWindow;
import GUI.Simulation.DrilldownWindow;
import GUI.Simulation.SimulationWindow;
import GUI.Watcher.Watches;
import Simulation.Configuration;
import java.awt.Dimension;
import java.beans.PropertyVetoException;
import java.io.File;
import java.util.ArrayList;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JInternalFrame;
import javax.swing.JPopupMenu;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;

/**
 *
 * @author Néstor A. Bermúdez < nestor.bermudezs@gmail.com >
 */
public class MainWindow extends javax.swing.JFrame {

    SettingsEditor settingsEditor = null;
    public ArrayList<String> moduleNames = null;
    public boolean needsRefresh = false;
    
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        setPreferredSize(new Dimension(1280, 800));
        initComponents();
        
        JPopupMenu.setDefaultLightWeightPopupEnabled(false);
        Loader.getInstance().setup();
        
        moduleNames = new ArrayList<String>(ModuleRepository.getInstance().getModuleNames());
        Collections.sort(moduleNames);
    }
    
    public void refreshModules() {
        Loader.getInstance().loadModules();
        moduleNames = new ArrayList<String>(ModuleRepository.getInstance().getModuleNames());
        Collections.sort(moduleNames);
    }
    
    public void addWatcherWindow(Watches watcher) {
        if (watcher.getDesktopPane() == this.desktopPane)
            return;
        this.desktopPane.add(watcher);
    }
    
    public void addDrilldownWindow(DrilldownWindow one) {        
        this.desktopPane.add(one);
        one.moveToFront();
        one.setLocation(desktopPane.getWidth()/2-one.getWidth()/2, desktopPane.getHeight()/2-one.getHeight()/2);
        try {
            one.setSelected(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        desktopPane.repaint();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopPane = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        simWindow = new javax.swing.JMenuItem();
        openMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        changeSettingsMenu = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ArchSim");

        desktopPane.setPreferredSize(new java.awt.Dimension(1280, 800));

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("New Design Window");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem1);

        simWindow.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.SHIFT_MASK));
        simWindow.setText("New Simulation Window");
        simWindow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simWindowActionPerformed(evt);
            }
        });
        fileMenu.add(simWindow);

        openMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openMenuItem);

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        jMenu1.setText("Settings");

        changeSettingsMenu.setText("Change Settings");
        changeSettingsMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeSettingsMenuActionPerformed(evt);
            }
        });
        jMenu1.add(changeSettingsMenu);

        menuBar.add(jMenu1);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentMenuItem.setMnemonic('c');
        contentMenuItem.setText("Contents");
        helpMenu.add(contentMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        JInternalFrame[] array = desktopPane.getAllFrames();
        for (JInternalFrame jInternalFrame : array) {
            jInternalFrame.doDefaultCloseAction();
        }
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        DesignWindow newDesign = new DesignWindow(this);
        this.desktopPane.add(newDesign);
        
        newDesign.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void simWindowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simWindowActionPerformed
        SimulationWindow simulationWindow = new SimulationWindow(this);
        desktopPane.add(simulationWindow);
        
        simulationWindow.setVisible(true);
    }//GEN-LAST:event_simWindowActionPerformed

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
        JFileChooser fileChooser = new JFileChooser(Configuration.MODULES_DIRECTORY_PATH);
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int choose = fileChooser.showOpenDialog(this);
        
        if (choose != JFileChooser.APPROVE_OPTION)
            return;
        File target = fileChooser.getSelectedFile();
        
        try {
            DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
            Document doc = dBuilder.parse(target);
            
            doc.normalize();
            
            NodeList program = doc.getElementsByTagName("behaviour");
            if (program.getLength() == 0) {
                openSimulationFile(doc, target.getName());
            } else {
                openDesignFile(doc, target.getName());
            }
        } catch (Exception ex) {
            System.err.println(ex.getMessage());
        }
    }//GEN-LAST:event_openMenuItemActionPerformed

    private void changeSettingsMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeSettingsMenuActionPerformed
        if (settingsEditor == null) {
            settingsEditor = new SettingsEditor();
            desktopPane.add(settingsEditor);
        }
        settingsEditor.setVisible(true);
    }//GEN-LAST:event_changeSettingsMenuActionPerformed

    
    private void openSimulationFile(Document document, String fileName) {
        SimulationWindow simulationWindow = new SimulationWindow(this);
        simulationWindow.loadFromDocument(document);
        simulationWindow.addFilenameToTitle(fileName);
        
        this.desktopPane.add(simulationWindow);
        simulationWindow.setVisible(true);
    }
    
    private void openDesignFile(Document document, String fileName) {
        DesignWindow designWindow = new DesignWindow(this);
        designWindow.loadFromDocument(document);
        designWindow.addFilenameToTitle(fileName);
        
        this.desktopPane.add(designWindow);
        designWindow.setVisible(true);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenuItem changeSettingsMenu;
    private javax.swing.JMenuItem contentMenuItem;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem simWindow;
    // End of variables declaration//GEN-END:variables
}
